# -*- coding: utf-8 -*-
"""MNIST Digit Classification using NN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NA4kE9cGqOVc6uKqefZw_DJzD0CUjbrM
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
tf.random.set_seed(3)
from PIL import Image
from tensorflow import keras
import cv2
from google.colab.patches import cv2_imshow
from keras.datasets import mnist
from tensorflow.math import confusion_matrix

(X_train,Y_train),(X_test,Y_test) = mnist.load_data()

print(X_train.shape,Y_train.shape,X_test.shape,Y_test.shape)

print(X_train[0])

print(Y_train[0])

plt.imshow(X_train[0])
plt.show()

print(X_train[0].shape)

X_train = X_train/255
X_test = X_test/255

print(X_train[0])

"""**Building Neural Network**"""

model = keras.Sequential([

                 keras.layers.Flatten(input_shape=(28,28)),
                 keras.layers.Dense(50,activation='relu'),
                 keras.layers.Dense(50,activation='relu'),
                 keras.layers.Dense(10,activation='sigmoid'),

])

model.compile( optimizer='adam',
               loss = 'sparse_categorical_crossentropy',
               metrics = ['accuracy']
               )

model.fit(X_train,Y_train,epochs = 10)

loss, accuracy = model.evaluate(X_test,Y_test)

print(accuracy)

Y_pred = model.predict(X_test)

print(Y_pred.shape)

print(Y_test[50])

print(Y_pred[50])

Y_pred_label_for_first_img = np.argmax(Y_pred[50])
print(Y_pred_label_for_first_img)

Y_pred_labels = [np.argmax(i) for i in Y_pred]
print(Y_pred_labels)

conf_mat = confusion_matrix(Y_test,Y_pred_labels)
print(conf_mat)

plt.figure(figsize = (15,7))
sns.heatmap(conf_mat,annot=True,fmt='d',cmap ='Blues')
plt.xlabel('Predicted labels')
plt.ylabel('true label')

"""**Building a Predictive System**"""

#!wget 'https://i0.wp.com/searchingforbole.com/wp-content/uploads/2018/01/mnist-0-1-joined1.png?w=308&h=308&crop=1&ssl=1'

image = cv2.imread('/content/MNIST_digit.png')

type(image)

cv2_imshow(image)

image.shape

greyscale = cv2.cvtColor(image,cv2.COLOR_RGB2GRAY)

greyscale.shape

image_resized = cv2.resize(greyscale,(28,28))

image_resized.shape

cv2_imshow(image_resized)

print(image_resized)

image_resized = image_resized/255

print(image_resized)

image_reshaped = np.reshape(image_resized,[1,28,28])

input_prediction = model.predict(image_reshaped)
print(input_prediction)

input_pred_label = np.argmax(input_prediction)
print(input_pred_label)

#!wget 'https://copyassignment.com/wp-content/uploads/2022/05/b1.png'

input_image_path = input('Path of the image to be predicted')
input_image = cv2.imread(input_image_path)
cv2_imshow(input_image)
print(input_image.shape)
greyscale = cv2.cvtColor(input_image,cv2.COLOR_RGB2GRAY)
print(greyscale.shape)
image_resized = cv2.resize(greyscale,(28,28))
image_resized = image_resized/255
image_reshaped = np.reshape(image_resized,[1,28,28])
prediction = model.predict(image_reshaped)
print(prediction)
pred_label = np.argmax(prediction)
print('The digit is recognized as',pred_label)

